
- insert recurrences, numberOfExecEnvs, numberOfThreadsPerEnv somewhere else!
--- removed parser code:

				// parse out number of execution environments
				} else if(nodeName.equalsIgnoreCase(TEST_PLAN_NUM_OF_EXEC_ENV)) {
					String str = parseSimpleTextNode(cn);
					if(str == null || str.isEmpty())
						throw new TSPlanConfigurationFormatException("Missing required option " + TEST_PLAN_NUM_OF_EXEC_ENV);
					try {
						numberOfExecEnvs = Integer.parseInt(str);
					} catch(NumberFormatException e) {
						throw new TSPlanConfigurationFormatException("Invalid value for " + TEST_PLAN_NUM_OF_EXEC_ENV + ". Expected a numerical value but found: " + str);
					}
				// parse out number of threads per execution environment
				} else if(nodeName.equalsIgnoreCase(TEST_PLAN_NUM_OF_THREADS_PER_EXEC_ENV)) {
					String str = parseSimpleTextNode(cn);
					if(str == null || str.isEmpty())
						throw new TSPlanConfigurationFormatException("Missing required option " + TEST_PLAN_NUM_OF_THREADS_PER_EXEC_ENV);
					try {
						numberOfThreadsPerExecEnv = Integer.parseInt(str);
					} catch(NumberFormatException e) {
						throw new TSPlanConfigurationFormatException("Invalid value for " + TEST_PLAN_NUM_OF_THREADS_PER_EXEC_ENV + ". Expected a numerical value but found: " + str);
					}
				// parse out number of recurrences
				} else if(nodeName.equalsIgnoreCase(TEST_PLAN_RECURRENCES)) {
					String str = parseSimpleTextNode(cn);
					
					// <!-- infinite = infinite, 10 = 10 times, 100ms = 100 milliseconds, 1s = 1 second, 1m = 1 minute, 1h = 1 hour, 1d = 1 day -->
					if(str.equalsIgnoreCase("infinite")) {
						recurrenceType = TSPlanRecurrence.INFINITE;
					} else if(str.endsWith("ms")) {
						recurrenceType = TSPlanRecurrence.MILLIS;
						str = str.substring(0, str.indexOf("ms"));
					} else if(str.endsWith("s")) {
						recurrenceType = TSPlanRecurrence.SECONDS;
						str = str.substring(0, str.indexOf("s"));
					} else if(str.endsWith("m")) {
						recurrenceType = TSPlanRecurrence.MINUTES;
						str = str.substring(0, str.indexOf("m"));
					} else if(str.endsWith("h")) {
						recurrenceType = TSPlanRecurrence.HOURS;
						str = str.substring(0, str.indexOf("h"));
					} else if(str.endsWith("d")) {
						recurrenceType = TSPlanRecurrence.DAYS;
						str = str.substring(0, str.indexOf("d"));
					} else {
						recurrenceType = TSPlanRecurrence.TIMES;
					}
					
					if(recurrenceType != TSPlanRecurrence.INFINITE) {
						try {
							recurrences = Long.parseLong(str);
						} catch(NumberFormatException e) {
							throw new TSPlanConfigurationFormatException("Invalid recurrences value: " + str);
						}
					}
					
						
